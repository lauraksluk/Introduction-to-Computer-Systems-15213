>option timing 1
>option locking 1
>option semaphore 1
>proxy ./proxy
Proxy set up at lemonshark.ics.cs.cmu.edu:6226
>source '/afs/andrew.cmu.edu/usr3/kluk/private/15213/proxylab/tests/A07-multiple-request.cmd'
># Test ability to handle multiple requests
>serve s1 s2 s3
Server s1 running at lemonshark.ics.cs.cmu.edu:12307
Server s2 running at lemonshark.ics.cs.cmu.edu:11319
Server s3 running at lemonshark.ics.cs.cmu.edu:28428
>generate random-text1.txt 2K 
>generate random-text2.txt 4K 
>generate random-text3.txt 6K
>generate random-text4.txt 8K
>generate random-text5.txt 10K
>generate random-text6.txt 12K
>request r1 random-text1.txt s1
Client: Requesting '/random-text1.txt' from lemonshark.ics.cs.cmu.edu:12307
>request r2 random-text2.txt s2
Client: Requesting '/random-text2.txt' from lemonshark.ics.cs.cmu.edu:11319
>request r3 random-text3.txt s3
Client: Requesting '/random-text3.txt' from lemonshark.ics.cs.cmu.edu:28428
>request r4 random-text4.txt s3
Client: Requesting '/random-text4.txt' from lemonshark.ics.cs.cmu.edu:28428
>request r5 random-text5.txt s2
Client: Requesting '/random-text5.txt' from lemonshark.ics.cs.cmu.edu:11319
>request r6 random-text6.txt s1
Client: Requesting '/random-text6.txt' from lemonshark.ics.cs.cmu.edu:12307
># Respond in same order as requests
># This can be done with a sequential proxy
>wait r1
>respond r1
Server responded to request r1 with status ok
>wait r2
>respond r2
Server responded to request r2 with status ok
>wait r3
>respond r3
Server responded to request r3 with status ok
>wait r4
>respond r4
Server responded to request r4 with status ok
>wait r5
>respond r5
Server responded to request r5 with status ok
>wait r6
>respond r6
Server responded to request r6 with status ok
>wait *
>check r1
Request r1 yielded expected status 'ok'
>check r2
Request r2 yielded expected status 'ok'
>check r3
Request r3 yielded expected status 'ok'
>check r4
Request r4 yielded expected status 'ok'
>check r5
Request r5 yielded expected status 'ok'
>check r6
Request r6 yielded expected status 'ok'
>quit
Testing done.  Elapsed time = 2.30 seconds
ALL TESTS PASSED
